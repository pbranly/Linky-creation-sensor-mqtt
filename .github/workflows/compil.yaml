name: ‚ÄúBuild & Push Docker Image from Main‚Äù

on:
workflow_dispatch:
inputs:
TAG:
description: ‚ÄúTag pour l‚Äôimage Docker‚Äù
required: true
default: ‚Äúdebug‚Äù
push:
branches:
- main
paths-ignore:
- ‚Äú**.md‚Äù
- ‚Äú.github/**‚Äù

env:
DOCKERHUB_USERNAME: ‚Äúpbranly‚Äù
IMAGE_NAME: ‚Äúlinkycreationdockermqtt‚Äù

jobs:
build-and-push:
runs-on: ubuntu-latest

steps:
  # 1Ô∏è‚É£ Cloner le d√©p√¥t depuis la branche main
  - name: Checkout main
    uses: actions/checkout@v4
    with:
      ref: main

  # 2Ô∏è‚É£ D√©finir le tag (input manuel ou SHA pour push auto)
  - name: D√©finir le tag
    id: tag
    run: |
      if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
        echo "tag=${{ github.event.inputs.TAG }}" >> $GITHUB_OUTPUT
      else
        echo "tag=${GITHUB_SHA:0:7}" >> $GITHUB_OUTPUT
      fi

  # 3Ô∏è‚É£ V√©rifier que le secret DockerHub est bien pr√©sent
  - name: V√©rifier variables
    run: |
      echo "DOCKERHUB_USERNAME = $DOCKERHUB_USERNAME"
      echo "IMAGE_NAME = $IMAGE_NAME"
      echo "TAG = ${{ steps.tag.outputs.tag }}"
      if [ -z "${{ secrets.DOCKERHUB_TOKEN }}" ]; then
        echo "‚ùå DOCKERHUB_TOKEN est vide"
        exit 1
      else
        echo "‚úÖ DOCKERHUB_TOKEN est d√©fini"
      fi

  # 4Ô∏è‚É£ Configurer Docker Buildx
  - name: Set up Docker Buildx
    uses: docker/setup-buildx-action@v3

  # 5Ô∏è‚É£ Login DockerHub
  - name: Login DockerHub
    uses: docker/login-action@v3
    with:
      username: ${{ env.DOCKERHUB_USERNAME }}
      password: ${{ secrets.DOCKERHUB_TOKEN }}

  # 6Ô∏è‚É£ Build et Push l'image Docker
  - name: Build and push Docker image
    uses: docker/build-push-action@v5
    with:
      context: .
      file: ./Dockerfile
      push: true
      tags: |
        ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.tag }}
        ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
      cache-from: type=gha
      cache-to: type=gha,mode=max

  # 7Ô∏è‚É£ Afficher le r√©sultat
  - name: R√©sultat
    run: |
      echo "‚úÖ Image construite et pouss√©e avec succ√®s !"
      echo "üì¶ ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.tag }}"
      echo "üì¶ ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest"
      
