name: "Build & Push Docker Image"

on:
  workflow_dispatch:
    inputs:
      BUILD_TYPE:
        description: "Type de build"
        required: true
        type: choice
        options:
          - "tag"
        default: "tag"
      TAG_NAME:
        description: "Nom du tag (si BUILD_TYPE = tag)"
        required: false
        default: ""

  push:
    tags:
      - '*'   # ou plus restrictif : 'v*' si tu veux seulement les tags commençant par v
    paths-ignore:
      - "**.md"
      - ".github/**"

env:
  DOCKERHUB_USERNAME: "pbranly"
  IMAGE_NAME: "linkycreationdockermqtt"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ Déterminer la source
      - name: Déterminer la source
        id: source
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "source_type=tag" >> $GITHUB_OUTPUT
            echo "source_ref=${{ github.event.inputs.TAG_NAME }}" >> $GITHUB_OUTPUT
            echo "image_suffix=${{ github.event.inputs.TAG_NAME }}" >> $GITHUB_OUTPUT
          else
            echo "source_type=tag" >> $GITHUB_OUTPUT
            echo "source_ref=${{ github.ref_name }}" >> $GITHUB_OUTPUT
            echo "image_suffix=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          fi

      # 2️⃣ Checkout
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.source.outputs.source_ref }}

      # 3️⃣ Préparer les tags Docker
      - name: Préparer les tags Docker
        id: docker_tags
        run: |
          BASE_TAG="${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}"
          echo "tags=${BASE_TAG}:${{ steps.source.outputs.image_suffix }},${BASE_TAG}:latest" >> $GITHUB_OUTPUT
          echo "main_tag=${{ steps.source.outputs.image_suffix }}" >> $GITHUB_OUTPUT

      # 4️⃣ Vérifications
      - name: Vérifier variables
        run: |
          echo "SOURCE_TYPE = ${{ steps.source.outputs.source_type }}"
          echo "SOURCE_REF = ${{ steps.source.outputs.source_ref }}"
          echo "DOCKER_TAGS = ${{ steps.docker_tags.outputs.tags }}"
          if [ -z "${{ secrets.DOCKERHUB_TOKEN }}" ]; then
            echo "❌ DOCKERHUB_TOKEN est vide"
            exit 1
          else
            echo "✅ DOCKERHUB_TOKEN est défini"
          fi

      # 5️⃣ Build & Push
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.docker_tags.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
